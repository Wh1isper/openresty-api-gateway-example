env JWT_HEADER=X-EXAMPLE-AUTHORIZATION;

# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
#worker_processes 1;
# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;


#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections 1024;
}


http {
    include mime.types;
    default_type application/json;

    resolver kube-dns.kube-system.svc.cluster.local ipv6=off;

    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;

    log_format main '"level": "INFO", '
    '"$time_local" client=$remote_addr '
    'method=$request_method request="$request" '
    'request_length=$request_length '
    'status=$status bytes_sent=$bytes_sent '
    'body_bytes_sent=$body_bytes_sent '
    'referer=$http_referer '
    'user_agent="$http_user_agent" '
    'upstream_addr=$upstream_addr '
    'upstream_status=$upstream_status '
    'request_time=$request_time '
    'upstream_response_time=$upstream_response_time '
    'upstream_connect_time=$upstream_connect_time '
    'upstream_header_time=$upstream_header_time';

    # Log in JSON Format
    log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
    '"level": "INFO", '
    '"remote_addr": "$remote_addr", '
     '"body_bytes_sent": $body_bytes_sent, '
     '"request_time": $request_time, '
     '"response_status": $status, '
     '"request": "$request", '
     '"request_method": "$request_method", '
     '"host": "$host",'
     '"upstream_addr": "$upstream_addr",'
     '"http_x_forwarded_for": "$http_x_forwarded_for",'
     '"http_referrer": "$http_referer", '
     '"http_user_agent": "$http_user_agent", '
     '"http_version": "$server_protocol", '
     '"nginx_access": true }';
    access_log logs/access.log nginxlog_json;

    # Log in JSON Format
    # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
    # '"remote_addr": "$remote_addr", '
    #  '"body_bytes_sent": $body_bytes_sent, '
    #  '"request_time": $request_time, '
    #  '"response_status": $status, '
    #  '"request": "$request", '
    #  '"request_method": "$request_method", '
    #  '"host": "$host",'
    #  '"upstream_addr": "$upstream_addr",'
    #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
    #  '"http_referrer": "$http_referer", '
    #  '"http_user_agent": "$http_user_agent", '
    #  '"http_version": "$server_protocol", '
    #  '"nginx_access": true }';
    # access_log /dev/stdout nginxlog_json;

    sendfile on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout 65;

    #gzip  on;
    include /etc/nginx/conf.d/gateway.conf;
}
